%YAML 1.0
---

# Make sure the first entry always works (should run on CPU) -- add new entries at the end of the file.

# It is ok to have duplicate model names as long as <ACCEL>:<TYPE>:<NAME> is unique, where ACCEL is one of (OpenCV, NPU,
# TPU, VPU), and TYPE is one of (Classify:Detect:Segment:Custom).

# For an up to date list of supported keys in this file, see all the parameters defined in:
#
# jevois/include/jevois/DNN/PreProcessor*.H
# jevois/include/jevois/DNN/Network*.H
# jevois/include/jevois/DNN/PostProcessor*.H
# jevois/include/jevois/DNN/Pipeline.H

# The parameters are all reset to their default values specified in the above files when a new model is loaded, except
# for those of Pipeline. So, no need to set these parameters again. For example, in PostProcessor.H, parameter 'nms'
# (for non-maximum suppression) defaults to 45.0, so no need to repeat that here if that value works for your model. But
# you can set it here with a different value that may work better for a given model.

# You can (recursively) include additional YAML files here using:
#
# include: my_extra_zoo.yml
#
# to load /jevoispro/share/dnn/my_extra_zoo.yml, or include all .yml files in a directory as follows:

# Include all YAML files in the /jevoispro/share/dnn/custom/ directory:
includedir: custom

# Note that you can set global parameters at the beginning of a YAML file, which will be applied, if appropriate, to
# any pipeline selected. For example, if you put all your OpenCV classification networks in one YAML file, you could set
# this at tbe beginning:
#
# preproc: Blob
# nettype: OpenCV
# postproc: Classify
#
# and then you do not need to repeat it for every model. Make sure you declare these before any pipeline
# definition. Note that these apply to the current file only, and they do not combine recursively to/from included
# files.

# Finally note that our current preferred organization strategy is that custom models should have one directory each
# under /jevoispro/share/dnn/custom/ that contains their model files, label file, and one model.yml file with a single
# entry for that model. When organized in that way, the YAML file for each custom model will show up in the GUI as one
# of the config files you can edit under the "Config" tab.

####################################################################################################
# Image classification models.
####################################################################################################

# --------------------------------------------------------------------------------------------------
# OpenCV models (running on CPU, GPU/OpenCL, or MyriadX OpenVino)
# --------------------------------------------------------------------------------------------------

# SqueezeNet v1.1 from https://github.com/DeepScale/SqueezeNet
SqueezeNet:
  preproc: Blob
  nettype: OpenCV
  postproc: Classify
  model: "opencv-dnn/classification/squeezenet_v1.1.caffemodel"
  config: "opencv-dnn/classification/squeezenet_v1.1.prototxt"
  intensors: "NCHW:32F:1x3x227x227"
  mean: "0 0 0"
  scale: 1.0
  rgb: false
  classes: "coral/classification/imagenet_labels.txt"
  classoffset: 1

# Inception V3 on CPU:
Inception-V3:
  preproc: Blob
  nettype: OpenCV
  postproc: Classify
  model: "openvino/classification/inception-v3/inception_v3_2016_08_28_frozen.pb"
  intensors: "NCHW:32F:1x3x299x299"
  rgb: false
  classes: "openvino/classification/inception-v3/imagenet_slim_labels.txt"

# Inception V3 on Myriad-X:
Inception-V3:
  preproc: Blob
  nettype: OpenCV
  backend: InferenceEngine
  target: Myriad
  postproc: Classify
  model: "openvino/classification/inception-v3/inception_v3_2016_08_28_frozen.pb"
  intensors: "NCHW:32F:1x3x299x299"
  rgb: false
  classes: "openvino/classification/inception-v3/imagenet_slim_labels.txt"

# Googlenet from https://github.com/BVLC/caffe/tree/master/models/bvlc_googlenet on CPU
GoogleNet:
  preproc: Blob
  nettype: OpenCV
  postproc: Classify
  model: "opencv-dnn/classification/bvlc_googlenet.caffemodel"
  config: "opencv-dnn/classification/bvlc_googlenet.prototxt"
  intensors: "NCHW:32F:1x3x224x224"
  mean: "104.0 117.0 123.0"
  scale: 1.0
  rgb: false
  classes: "openvino/classification/inception-v3/imagenet_slim_labels.txt"
  classoffset: 1

# --------------------------------------------------------------------------------------------------
# Coral Edge TPU models
# --------------------------------------------------------------------------------------------------

MobileNetV3-1.0-224:
  preproc: Blob
  nettype: TPU
  postproc: Classify
  model: "coral/classification/tf2_mobilenet_v3_edgetpu_1.0_224_ptq_edgetpu.tflite"
  intensors: "NHWC:8U:1x224x224x3"
  rgb: false
  classes: "coral/classification/imagenet_labels.txt"

MobileNetV2-1.0-224:
  preproc: Blob
  nettype: TPU
  postproc: Classify
  model: "coral/classification/mobilenet_v2_1.0_224_quant_edgetpu.tflite"
  intensors: "NHWC:8U:1x224x224x3"
  rgb: false
  classes: "coral/classification/imagenet_labels.txt"

MobileNetV1-1.0-224:
  preproc: Blob
  nettype: TPU
  postproc: Classify
  model: "coral/classification/mobilenet_v1_1.0_224_quant_edgetpu.tflite"
  intensors: "NHWC:8U:1x224x224x3"
  rgb: false
  classes: "coral/classification/imagenet_labels.txt"

EfficientNet-L:
  preproc: Blob
  nettype: TPU
  postproc: Classify
  model: "coral/classification/efficientnet-edgetpu-L_quant_edgetpu.tflite"
  intensors: "NHWC:8U:1x300x300x3"
  rgb: false
  classes: "coral/classification/imagenet_labels.txt"

EfficientNet-M:
  preproc: Blob
  nettype: TPU
  postproc: Classify
  model: "coral/classification/efficientnet-edgetpu-M_quant_edgetpu.tflite"
  intensors: "NHWC:8U:1x240x240x3"
  rgb: false
  classes: "coral/classification/imagenet_labels.txt"

EfficientNet-S:
  preproc: Blob
  nettype: TPU
  postproc: Classify
  model: "coral/classification/efficientnet-edgetpu-S_quant_edgetpu.tflite"
  intensors: "NHWC:8U:1x224x224x3"
  rgb: false
  classes: "coral/classification/imagenet_labels.txt"

MobileNetV1-1.0-224-TF2:
  preproc: Blob
  nettype: TPU
  postproc: Classify
  model: "coral/classification/tf2_mobilenet_v1_1.0_224_ptq_edgetpu.tflite"
  intensors: "NHWC:8U:1x224x224x3"
  rgb: false
  classes: "coral/classification/imagenet_labels.txt"

MobileNetV2-1.0-224-TF2:
  preproc: Blob
  nettype: TPU
  postproc: Classify
  model: "coral/classification/tf2_mobilenet_v2_1.0_224_ptq_edgetpu.tflite"
  intensors: "NHWC:8U:1x224x224x3"
  rgb: false
  classes: "coral/classification/imagenet_labels.txt"

MobileNetV3-1.0-224-TF2:
  preproc: Blob
  nettype: TPU
  postproc: Classify
  model: "coral/classification/tf2_mobilenet_v3_edgetpu_1.0_224_ptq_edgetpu.tflite"
  intensors: "NHWC:8U:1x224x224x3"
  rgb: false
  classes: "coral/classification/imagenet_labels.txt"

MobileNetV2-iNat-Insects:
  preproc: Blob
  nettype: TPU
  postproc: Classify
  model: "coral/classification/mobilenet_v2_1.0_224_inat_insect_quant_edgetpu.tflite"
  intensors: "NHWC:8U:1x224x224x3"
  mean: "0 0 0"
  scale: 1.0
  classes: "coral/classification/inat_insect_labels.txt"

MobileNetV2-iNat-Plants:
  preproc: Blob
  nettype: TPU
  postproc: Classify
  model: "coral/classification/mobilenet_v2_1.0_224_inat_plant_quant_edgetpu.tflite"
  intensors: "NHWC:8U:1x224x224x3"
  mean: "0 0 0"
  scale: 1.0
  classes: "coral/classification/inat_plant_labels.txt"

MobileNetV2-iNat-Birds:
  preproc: Blob
  nettype: TPU
  postproc: Classify
  model: "coral/classification/mobilenet_v2_1.0_224_inat_bird_quant_edgetpu.tflite"
  intensors: "NHWC:8U:1x224x224x3"
  mean: "0 0 0"
  scale: 1.0
  classes: "coral/classification/inat_bird_labels.txt"

Inception-V1:
  preproc: Blob
  nettype: TPU
  postproc: Classify
  model: "coral/classification/inception_v1_224_quant_edgetpu.tflite"
  intensors: "NHWC:8U:1x224x224x3"
  rgb: false
  classes: "coral/classification/imagenet_labels.txt"

Inception-V2:
  preproc: Blob
  nettype: TPU
  postproc: Classify
  model: "coral/classification/inception_v2_224_quant_edgetpu.tflite"
  intensors: "NHWC:8U:1x224x224x3"
  rgb: false
  classes: "coral/classification/imagenet_labels.txt"

Inception-V3:
  preproc: Blob
  nettype: TPU
  postproc: Classify
  model: "coral/classification/inception_v3_299_quant_edgetpu.tflite"
  intensors: "NHWC:8U:1x299x299x3"
  rgb: false
  classes: "coral/classification/imagenet_labels.txt"

Inception-V4:
  preproc: Blob
  nettype: TPU
  postproc: Classify
  model: "coral/classification/inception_v4_299_quant_edgetpu.tflite"
  intensors: "NHWC:8U:1x299x299x3"
  rgb: false
  classes: "coral/classification/imagenet_labels.txt"

Resnet-50:
  preproc: Blob
  nettype: TPU
  postproc: Classify
  model: "coral/classification/tfhub_tf2_resnet_50_imagenet_ptq_edgetpu.tflite"
  intensors: "NHWC:8U:1x224x224x3"
  rgb: false
  classoffset: 1
  classes: "coral/classification/imagenet_labels.txt"

Popular-US-Products:
  preproc: Blob
  nettype: TPU
  postproc: Classify
  model: "coral/classification/tfhub_tf1_popular_us_products_ptq_fc_split_edgetpu.tflite"
  intensors: "NHWC:8U:1x224x224x3"
  mean: "0 0 0"
  scale: 1.0
  classes: "coral/classification/popular_us_products_V1_labelmap.csv"

# --------------------------------------------------------------------------------------------------
# JeVois-Pro NPU models
# --------------------------------------------------------------------------------------------------

InceptionV3:
  preproc: Blob
  nettype: NPU
  postproc: Classify
  model: "npu/classification/inception_v3.nb"
  intensors: "NHWC:8U:1x299x299x3:AA:0.007291667:137"
  outtensors: "16F:1x1001"
  classoffset: 1
  classes: "coral/classification/imagenet_labels.txt"

# FIXME crashes
#MobileNet:
#  preproc: Blob
#  nettype: NPU
#  postproc: Classify
#  model: "npu/classification/mobilenet_tf.nb"
#  intensors: "NHWC:8S:1x224x224x3:DFP:7"
#  outtensors: "8S:1x1001:DFP:2"
#  classes: "coral/classification/imagenet_labels.txt"
#  classoffset: 1

####################################################################################################
# Object detection models.
####################################################################################################

# --------------------------------------------------------------------------------------------------
# OpenCV models (running on CPU, GPU/OpenCL, or MyriadX OpenVino)
# --------------------------------------------------------------------------------------------------

# YOLO4 object detection family from Darknet (https://github.com/AlexeyAB/darknet)
# YOLO object detection family from Darknet (https://pjreddie.com/darknet/yolo/)
# Might be used for all YOLOv2, TinyYolov2, YOLOv3, YOLOv4 and TinyYolov4
YoloV3-Tiny-Coco:
  preproc: Blob
  nettype: OpenCV
  postproc: Detect
  detecttype: YOLO
  model: "darknet/yolo/weights/yolov3-tiny.weights"
  config: "darknet/yolo/cfg/yolov3-tiny.cfg"
  intensors: "NCHW:32F:1x3x416x416"
  mean: "0 0 0"
  scale: "0.00392"
  classes: "darknet/yolo/data/coco.names"

YoloV2-Tiny-Voc:
  preproc: Blob
  nettype: OpenCV
  postproc: Detect
  detecttype: YOLO
  model: "darknet/yolo/weights/yolov2-tiny-voc.weights"
  config: "darknet/yolo/cfg/yolov2-tiny-voc.cfg"
  intensors: "NCHW:32F:1x3x416x416"
  mean: "0 0 0"
  scale: "0.00392"
  classes: "darknet/yolo/data/voc.names"

# OpenCV's face detection network
OpenCV-Face:
  preproc: Blob
  nettype: OpenCV
  postproc: Detect
  detecttype: SSD
  model: "opencv-dnn/detection/opencv_face_detector.caffemodel"
  config: "opencv-dnn/detection/opencv_face_detector.prototxt"
  intensors: "NCHW:32F:1x3x300x300"
  mean: "104 177 123"
  scale: "1.0"
  rgb: false
  scorescale: "1.0"
  classes: "opencv-dnn/detection/face.txt"

# OpenCV's YOLOv3 on CPU
YoloV3-CPU:
  preproc: Blob
  nettype: OpenCV
  postproc: Detect
  detecttype: YOLO
  model: "darknet/yolo/weights/yolov3.weights"
  config: "darknet/yolo/cfg/yolov3.cfg"
  intensors: "NCHW:32F:1x3x416x416"
  mean: "0 0 0"
  scale: 0.00392
  classes: "darknet/yolo/data/coco.names"

# OpenCV's MobileNet-SSD Caffe on CPU
SSD-Caffe:
  preproc: Blob
  nettype: OpenCV
  postproc: Detect
  detecttype: SSD
  model: "opencv-dnn/detection/MobileNetSSD_deploy.caffemodel"
  config: "opencv-dnn/detection/MobileNetSSD_deploy.prototxt"
  intensors: "NCHW:32F:1x3x300x300"
  mean: "127.5 127.5 127.5"
  scale: 0.007843
  rgb: false
  classes: "darknet/yolo/data/voc.names"

# --------------------------------------------------------------------------------------------------
# Coral Edge TPU models
# --------------------------------------------------------------------------------------------------

# fixme
#YoloV4-Int-VOC:
#  preproc: Blob
#  nettype: TPU
#  postproc: Detect
#  detecttype: RAWYOLOv4
#  model: "coral/detection/yolov4_416_full_integer_quant_edgetpu.tflite"
#  intensors: "NHWC:32F:1x416x416x3"
#  outtensors: "32F:1x52x52x3x85, 32F:1x26x26x3x85, 32F:1x13x13x3x85:DFP:2"
#  classes: "darknet/yolo/data/voc.names"

#fixme
#SSDlite-Mobilenet-COCO:
#  preproc: Blob
#  nettype: TPU
#  postproc: Detect
#  detecttype: TPUSSD
#  model: "coral/detection/ssdlite_mobilenet_v2_coco_300_full_integer_quant_edgetpu.tflite"
#  intensors: "NHWC:8U:1x300x300x3"
#  outtensors: "32F:1x1917x4, 32F:1x1917x91"
#  classes: "coral/detection/coco_labels.txt"

#fixme
#YoloV4-Tiny-VOC:
#  preproc: Blob
#  nettype: TPU
#  postproc: Detect
#  detecttype: TPUSSD
#  model: "coral/detection/yolov4_tiny_voc_416x416_full_integer_quant_edgetpu.tflite"
#  intensors: "NHWC:8U:1x416x416x3"
#  classes: "darknet/yolo/data/voc.names"

MobileDetSSD-Coco:
  preproc: Blob
  nettype: TPU
  postproc: Detect
  detecttype: TPUSSD
  model: "coral/detection/ssdlite_mobiledet_coco_qat_postprocess_edgetpu.tflite"
  intensors: "NHWC:8U:1x320x320x3"
  classes: "coral/detection/coco_labels.txt"

MobileNetSSDv2-face:
  preproc: Blob
  nettype: TPU
  postproc: Detect
  detecttype: TPUSSD
  model: "coral/detection/ssd_mobilenet_v2_face_quant_postprocess_edgetpu.tflite"
  intensors: "NHWC:8U:1x320x320x3"
  classes: "opencv-dnn/detection/face.txt"

MobileNetSSDv2-Coco:
  preproc: Blob
  nettype: TPU
  postproc: Detect
  detecttype: TPUSSD
  model: "coral/detection/ssd_mobilenet_v2_coco_quant_postprocess_edgetpu.tflite"
  intensors: "NHWC:8U:1x300x300x3"
  classes: "coral/detection/coco_labels.txt"

MobileNetSSDv1-Coco:
  preproc: Blob
  nettype: TPU
  postproc: Detect
  detecttype: TPUSSD
  model: "coral/detection/ssd_mobilenet_v1_coco_quant_postprocess_edgetpu.tflite"
  intensors: "NHWC:8U:1x300x300x3"
  classes: "coral/detection/coco_labels.txt"

MobileNetSSDFPNv1-Coco:
  preproc: Blob
  nettype: TPU
  postproc: Detect
  detecttype: TPUSSD
  model: "coral/detection/tf2_ssd_mobilenet_v1_fpn_640x640_coco17_ptq_edgetpu.tflite"
  intensors: "NHWC:8U:1x640x640x3"
  classes: "coral/detection/coco_labels.txt"

EfficientDetLite0-Coco:
  preproc: Blob
  nettype: TPU
  postproc: Detect
  detecttype: TPUSSD
  model: "coral/detection/efficientdet_lite0_320_ptq_edgetpu.tflite"
  intensors: "NHWC:8U:1x320x320x3"
  classes: "coral/detection/coco_labels.txt"

EfficientDetLite1-Coco:
  preproc: Blob
  nettype: TPU
  postproc: Detect
  detecttype: TPUSSD
  model: "coral/detection/efficientdet_lite1_384_ptq_edgetpu.tflite"
  intensors: "NHWC:8U:1x384x384x3"
  classes: "coral/detection/coco_labels.txt"

EfficientDetLite2-Coco:
  preproc: Blob
  nettype: TPU
  postproc: Detect
  detecttype: TPUSSD
  model: "coral/detection/efficientdet_lite2_448_ptq_edgetpu.tflite"
  intensors: "NHWC:8U:1x448x448x3"
  classes: "coral/detection/coco_labels.txt"

EfficientDetLite3-Coco:
  preproc: Blob
  nettype: TPU
  postproc: Detect
  detecttype: TPUSSD
  model: "coral/detection/efficientdet_lite3_512_ptq_edgetpu.tflite"
  intensors: "NHWC:8U:1x512x512x3"
  classes: "coral/detection/coco_labels.txt"

EfficientDetLite3x-Coco:
  preproc: Blob
  nettype: TPU
  postproc: Detect
  detecttype: TPUSSD
  model: "coral/detection/efficientdet_lite3x_640_ptq_edgetpu.tflite"
  intensors: "NHWC:8U:1x640x640x3"
  classes: "coral/detection/coco_labels.txt"

# --------------------------------------------------------------------------------------------------
# JeVois-Pro NPU models
# --------------------------------------------------------------------------------------------------

Yolo-Face:
  preproc: Blob
  scale: "0"
  nettype: NPU
  postproc: Detect
  detecttype: RAWYOLOface
  thresh: "24"
  nms: "40"
  model: "npu/detection/yolo_face_88.nb"
  intensors: "NCHW:8S:1x3x416x416:DFP:7"
  outtensors: "8S:1x30x13x13:DFP:3"
  rgb: false
  classes: "opencv-dnn/detection/face.txt"

YoloV3Tiny:
  preproc: Blob
  scale: "0"
  nettype: NPU
  postproc: Detect
  detecttype: RAWYOLOv3tiny
  model: "npu/detection/yolotiny_88.nb"
  intensors: "NCHW:8S:1x3x416x416:DFP:7"
  outtensors: "8S:1x255x13x13:DFP:2, 8S:1x255x26x26:DFP:2"
  classes: "npu/detection/coco-labels.txt"

YoloV4:
  preproc: Blob
  scale: "0"
  nettype: NPU
  postproc: Detect
  detecttype: RAWYOLOv4
  model: "npu/detection/yolov4_88.nb"
  intensors: "NCHW:8S:1x3x416x416:DFP:7"
  outtensors: "8S:1x255x52x52:DFP:1, 8S:1x255x26x26:DFP:2, 8S:1x255x13x13:DFP:2"
  classes: "npu/detection/coco-labels.txt"

YoloV3:
  preproc: Blob
  scale: "0"
  nettype: NPU
  postproc: Detect
  detecttype: RAWYOLOv3
  model: "npu/detection/yolov3_88.nb"
  intensors: "NCHW:8S:1x3x416x416:DFP:7"
  outtensors: "8S:1x255x13x13:DFP:2, 8S:1x255x26x26:DFP:2, 8S:1x255x52x52:DFP:2"
  classes: "npu/detection/coco-labels.txt"

YoloV2:
  preproc: Blob
  scale: "0"
  nettype: NPU
  postproc: Detect
  detecttype: RAWYOLOv2
  model: "npu/detection/yolov2_88.nb"
  intensors: "NCHW:8S:1x3x416x416:DFP:7"
  outtensors: "8S:1x425x13x13:DFP:2"
  classes: "npu/detection/coco-labels.txt"

#FaceNet:
#  preproc: Blob
#  scale: "0"
#  nettype: NPU
#  postproc: Detect
#  model: "npu/detection/faceNet_88.nb"
#  intensors: "NHWC:8S:1x160x160x3:DFP:7"
#  outtensors: "8S:1x128:DFP:5"

# --------------------------------------------------------------------------------------------------
# OpenVino Myriad-X models
# --------------------------------------------------------------------------------------------------

face-detection-retail-0004:
  preproc: Blob
  nettype: OpenCV
  backend: InferenceEngine
  target: Myriad
  postproc: Detect
  detecttype: SSD
  model: "openvino/detection/face-detection-retail-0004/FP16/face-detection-retail-0004.bin"
  config: "openvino/detection/face-detection-retail-0004/FP16/face-detection-retail-0004.xml"
  intensors: "NCHW:8U:1x3x300x300"
  rgb: false
  classes: "opencv-dnn/detection/face.txt"

# FIXME hangs
#face-detection-0206:
#  preproc: Blob
#  nettype: OpenCV
#  backend: InferenceEngine
#  target: Myriad
#  postproc: Detect
#  detecttype: SSD
#  model: "openvino/detection/face-detection-0206/FP16/face-detection-0206.bin"
#  config: "openvino/detection/face-detection-0206/FP16/face-detection-0206.xml"
#  intensors: "NCHW:8U:1x3x640x640"
#  rgb: false
#  classes: "opencv-dnn/detection/face.txt"

face-detection-adas-0001:
  preproc: Blob
  nettype: OpenCV
  backend: InferenceEngine
  target: Myriad
  postproc: Detect
  detecttype: SSD
  model: "openvino/detection/face-detection-adas-0001/FP16/face-detection-adas-0001.bin"
  config: "openvino/detection/face-detection-adas-0001/FP16/face-detection-adas-0001.xml"
  intensors: "NCHW:8U:1x3x384x672"
  rgb: false
  classes: "opencv-dnn/detection/face.txt"

person-detection-retail-0013:
  preproc: Blob
  nettype: OpenCV
  backend: InferenceEngine
  target: Myriad
  postproc: Detect
  detecttype: SSD
  model: "openvino/detection/person-detection-retail-0013/FP16/person-detection-retail-0013.bin"
  config: "openvino/detection/person-detection-retail-0013/FP16/person-detection-retail-0013.xml"
  intensors: "NCHW:8U:1x3x320x544"
  rgb: false
  classes: "opencv-dnn/detection/person.txt"

pedestrian-detection-adas-0002:
  preproc: Blob
  nettype: OpenCV
  backend: InferenceEngine
  target: Myriad
  postproc: Detect
  detecttype: SSD
  model: "openvino/detection/pedestrian-detection-adas-0002/FP16/pedestrian-detection-adas-0002.bin"
  config: "openvino/detection/pedestrian-detection-adas-0002/FP16/pedestrian-detection-adas-0002.xml"
  intensors: "NCHW:8U:1x3x384x672"
  rgb: false
  classes: "opencv-dnn/detection/person.txt"

vehicle-detection-adas-0002:
  preproc: Blob
  nettype: OpenCV
  backend: InferenceEngine
  target: Myriad
  postproc: Detect
  detecttype: SSD
  model: "openvino/detection/vehicle-detection-adas-0002/FP16/vehicle-detection-adas-0002.bin"
  config: "openvino/detection/vehicle-detection-adas-0002/FP16/vehicle-detection-adas-0002.xml"
  intensors: "NCHW:8U:1x3x384x672"
  rgb: false
  classes: "opencv-dnn/detection/vehicle.txt"

pedestrian-and-vehicle-detector-adas-0001:
  preproc: Blob
  nettype: OpenCV
  backend: InferenceEngine
  target: Myriad
  postproc: Detect
  detecttype: SSD
  model: "openvino/detection/pedestrian-and-vehicle-detector-adas-0001/FP16/pedestrian-and-vehicle-detector-adas-0001.bin"
  config: "openvino/detection/pedestrian-and-vehicle-detector-adas-0001/FP16/pedestrian-and-vehicle-detector-adas-0001.xml"
  intensors: "NCHW:8U:1x3x384x672"
  classes: "openvino/detection/pedestrian-and-vehicle-detector-adas-0001/classes.txt"
  rgb: false

product-detection-0001:
  preproc: Blob
  nettype: OpenCV
  backend: InferenceEngine
  target: Myriad
  postproc: Detect
  detecttype: SSD
  model: "openvino/detection/product-detection-0001/FP16/product-detection-0001.bin"
  config: "openvino/detection/product-detection-0001/FP16/product-detection-0001.xml"
  intensors: "NCHW:8U:1x3x512x512"
  classes: "openvino/detection/product-detection-0001/classes.txt"
  classoffset: 1
  rgb: false

# runs but no sensible outputs, may need to check reshaping and anchors
# yolo-v2-tiny-ava-0001:
#   preproc: Blob
#   nettype: OpenCV
#   backend: InferenceEngine
#   target: Myriad
#   postproc: Detect
#   detecttype: RAWYOLOv2
#   model: "openvino/detection/yolo-v2-tiny-ava-0001/FP16/yolo-v2-tiny-ava-0001.bin"
#   config: "openvino/detection/yolo-v2-tiny-ava-0001/FP16/yolo-v2-tiny-ava-0001.xml"
#   intensors: "NHWC:32F:1x416x416x3"
#   classes: "darknet/yolo/data/voc.names"
#   rgb: false

# yolo-v2-tiny-ava-sparse-60-0001:
#   preproc: Blob
#   nettype: OpenCV
#   backend: InferenceEngine
#   target: Myriad
#   postproc: Detect
#   detecttype: RAWYOLOv2
#   model: "openvino/detection/yolo-v2-tiny-ava-sparse-60-0001/FP16/yolo-v2-tiny-ava-sparse-60-0001.bin"
#   config: "openvino/detection/yolo-v2-tiny-ava-sparse-60-0001/FP16/yolo-v2-tiny-ava-sparse-60-0001.xml"
#   intensors: "NCHW:32F:1x3x416x416"
#   classes: "darknet/yolo/data/voc.names"
#   rgb: false

# yolo-v2-tiny-vehicle-detection-0001:
#   preproc: Blob
#   nettype: OpenCV
#   backend: InferenceEngine
#   target: Myriad
#   postproc: Detect
#   detecttype: RAWYOLOv2
#   model: "openvino/detection/yolo-v2-tiny-vehicle-detection-0001/FP16/yolo-v2-tiny-vehicle-detection-0001.bin"
#   config: "openvino/detection/yolo-v2-tiny-vehicle-detection-0001/FP16/yolo-v2-tiny-vehicle-detection-0001.xml"
#   intensors: "NCHW:32F:1x3x416x416"
#   classes: "darknet/yolo/data/coco.names"
#   rgb: false

# yolo-v2-ava-0001:
#   preproc: Blob
#   nettype: OpenCV
#   backend: InferenceEngine
#   target: Myriad
#   postproc: Detect
#   detecttype: RAWYOLOv2
#   model: "openvino/detection/yolo-v2-ava-0001/FP16/yolo-v2-ava-0001.bin"
#   config: "openvino/detection/yolo-v2-ava-0001/FP16/yolo-v2-ava-0001.xml"
#   intensors: "NCHW:32F:1x3x416x416"
#   classes: "darknet/yolo/data/voc.names"
#   rgb: false

# yolo-v2-ava-sparse-70-0001:
#   preproc: Blob
#   nettype: OpenCV
#   backend: InferenceEngine
#   target: Myriad
#   postproc: Detect
#   detecttype: RAWYOLOv2
#   model: "openvino/detection/yolo-v2-ava-sparse-70-0001/FP16/yolo-v2-ava-sparse-70-0001.bin"
#   config: "openvino/detection/yolo-v2-ava-sparse-70-0001/FP16/yolo-v2-ava-sparse-70-0001.xml"
#   intensors: "NCHW:32F:1x3x416x416"
#   classes: "darknet/yolo/data/voc.names"
#   rgb: false



####################################################################################################
# Semantic segmentation models
####################################################################################################

# --------------------------------------------------------------------------------------------------
# OpenCV models (running on CPU, GPU/OpenCL, or MyriadX OpenVino)
# --------------------------------------------------------------------------------------------------

# FIXME error at l313_torchMaxUnpooling on host
#ENet-CityScapes:
#  preproc: Blob
#  nettype: OpenCV
#  postproc: Segment
#  segtype: ArgMax
#  #model: "opencv-dnn/segmentation/Enet-model-best.net"
#  model: "opencv-dnn/segmentation/enet-model.net"
#  #intensors: "NCHW:8U:1x3x512x1024"
#  intensors: "NCHW:8U:1x3x256x512"
#  mean: "0 0 0"
#  scale: 0.00392
#  classes: "opencv-dnn/segmentation/enet-classes.txt"

DeepLabV3-CPU:
  preproc: Blob
  nettype: OpenCV
  postproc: Segment
  segtype: Classes2
  model: "opencv-dnn/segmentation/opt_deeplabv3_mnv2_513.pb"
  intensors: "NCHW:32F:1x3x513x513"
  mean: "127.5 127.5 127.5"
  scale: 0.007843
 
# --------------------------------------------------------------------------------------------------
# Coral Edge TPU models
# --------------------------------------------------------------------------------------------------

UNet-MobileNetV2-Pets-128:
  preproc: Blob
  nettype: TPU
  dequant: false
  postproc: Segment
  segtype: Classes
  bgid: 1
  model: "coral/segmentation/keras_post_training_unet_mv2_128_quant_edgetpu.tflite"
  intensors: "NHWC:8U:1x128x128x3"

UNet-MobileNetV2-Pets-256:
  preproc: Blob
  nettype: TPU
  dequant: false
  postproc: Segment
  segtype: Classes
  bgid: 1
  model: "coral/segmentation/keras_post_training_unet_mv2_256_quant_edgetpu.tflite"
  intensors: "NHWC:8U:1x256x256x3"

DeepLabV3-dm0.5:
  preproc: Blob
  nettype: TPU
  dequant: false
  postproc: Segment
  segtype: ArgMax
  model: "coral/segmentation/deeplabv3_mnv2_dm05_pascal_quant_edgetpu.tflite"
  intensors: "NHWC:8U:1x513x513x3"

DeepLabV3-dm1.0:
  preproc: Blob
  nettype: TPU
  dequant: false
  postproc: Segment
  segtype: ArgMax
  model: "coral/segmentation/deeplabv3_mnv2_pascal_quant_edgetpu.tflite"
  intensors: "NHWC:8U:1x513x513x3"

DeepLab-slim:
  preproc: Blob
  nettype: TPU
  dequant: false
  postproc: Segment
  segtype: ArgMax
  model: "coral/segmentation/deeplab_mobilenet_edgetpu_slim_cityscapes_quant_edgetpu.tflite"
  intensors: "NHWC:8U:1x513x513x3"

# some undefined operation, may need to update the TPU libs
# BodyPix-MobileNetV1-480:
#   preproc: Blob
#   nettype: TPU
#   dequant: false
#   postproc: Segment
#   segtype: ArgMax
#   model: "coral/segmentation/bodypix_mobilenet_v1_075_480_352_16_quant_decoder_edgetpu.tflite"
#   intensors: "NHWC:8U:1x352x480x3"

# BodyPix-MobileNetV1-512:
#   preproc: Blob
#   nettype: TPU
#   dequant: false
#   postproc: Segment
#   segtype: ArgMax
#   model: "coral/segmentation/bodypix_mobilenet_v1_075_512_512_16_quant_decoder_edgetpu.tflite"
#   intensors: "NHWC:8U:1x512x512x3"

# BodyPix-MobileNetV1-640:
#   preproc: Blob
#   nettype: TPU
#   dequant: false
#   postproc: Segment
#   segtype: ArgMax
#   model: "coral/segmentation/bodypix_mobilenet_v1_075_640_480_16_quant_decoder_edgetpu.tflite"
#   intensors: "NHWC:8U:1x480x640x3"

# BodyPix-MobileNetV1-768:
#   preproc: Blob
#   nettype: TPU
#   dequant: false
#   postproc: Segment
#   segtype: ArgMax
#   model: "coral/segmentation/bodypix_mobilenet_v1_075_768_576_16_quant_decoder_edgetpu.tflite"
#   intensors: "NHWC:8U:1x576x768x3"

# BodyPix-MobileNetV1-1024:
#   preproc: Blob
#   nettype: TPU
#   dequant: false
#   postproc: Segment
#   segtype: ArgMax
#   model: "coral/segmentation/bodypix_mobilenet_v1_075_1024_768_16_quant_decoder_edgetpu.tflite"
#   intensors: "NHWC:8U:1x768x1024x3"

# BodyPix-MobileNetV1-1280:
#   preproc: Blob
#   nettype: TPU
#   dequant: false
#   postproc: Segment
#   segtype: ArgMax
#   model: "coral/segmentation/bodypix_mobilenet_v1_075_1280_720_16_quant_decoder_edgetpu.tflite"
#   intensors: "NHWC:8U:1x720x1280x3"

# BodyPix-Resnet50-416:
#   preproc: Blob
#   nettype: TPU
#   dequant: false
#   postproc: Segment
#   segtype: ArgMax
#   model: "coral/segmentation/bodypix_resnet_50_416_288_16_quant_decoder_edgetpu.tflite"
#   intensors: "NHWC:8U:1x288x416x3"

# BodyPix-Resnet50-768:
#   preproc: Blob
#   nettype: TPU
#   dequant: false
#   postproc: Segment
#   segtype: ArgMax
#   model: "coral/segmentation/bodypix_resnet_50_768_496_32_quant_decoder_edgetpu.tflite"
#   intensors: "NHWC:8U:1x496x768x3"

# --------------------------------------------------------------------------------------------------
# JeVois-Pro NPU models
# --------------------------------------------------------------------------------------------------

# --------------------------------------------------------------------------------------------------
# OpenVino Myriad-X models
# --------------------------------------------------------------------------------------------------

####################################################################################################
####################################################################################################
####################################################################################################

####################################################################################################
# reserved for future
####################################################################################################

# --------------------------------------------------------------------------------------------------
# OpenCV models (running on CPU, GPU/OpenCL, or MyriadX OpenVino)
# --------------------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------------------
# Coral Edge TPU models
# --------------------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------------------
# JeVois-Pro NPU models
# --------------------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------------------
# OpenVino Myriad-X models
# --------------------------------------------------------------------------------------------------
